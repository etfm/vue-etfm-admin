@use 'sass:map';
@use 'shared' as *;

$dropdown-item-line-height: () !default;
$dropdown-item-line-height: map.merge(
  (
    'large': 22px,
    'default': 22px,
    'small': 20px,
  ),
  $dropdown-item-line-height
);
$dropdown-item-padding: () !default;
$dropdown-item-padding: map.merge(
  (
    'large': 7px 20px,
    'default': 5px 16px,
    'small': 2px 12px,
  ),
  $dropdown-item-padding
);
$dropdown-item-divided-margin: () !default;
$dropdown-item-divided-margin: map.merge(
  (
    'large': 8px 0,
    'default': 6px 0,
    'small': 4px 0,
  ),
  $dropdown-item-divided-margin
);
$dropdown-caret-width: () !default;
$dropdown-caret-width: map.merge($common-component-size, $dropdown-caret-width);
$dropdown-divider-width: 1px !default;

@include b(dropdown) {
  @each $size in (large, small) {
    @include m($size) {
      .#{$namespace}-dropdown__caret-button {
        width: map.get($dropdown-caret-width, $size);
      }
    }
  }

  position: relative;
  display: inline-flex;
  font-size: getCssVar('font-size', 'base');
  line-height: 1;
  color: getCssVar('text-color', 'regular');
  vertical-align: top;

  @include set-component-css-var('dropdown', $dropdown);

  @include e(popper) {
    @include set-component-css-var('dropdown', $dropdown);

    // using attributes selector to override

    @include picker-popper(
      getCssVar('bg-color', 'overlay'),
      1px solid getCssVar('border-color-light'),
      getCssVar('dropdown-menu-box-shadow')
    );

    @include b(scrollbar__bar) {
      z-index: calc(#{getCssVar('dropdown', 'menu-index')} + 1);
    }

    @include b(dropdown__list) {
      box-sizing: border-box;
      padding: 0;
      margin: 0;
      list-style: none;
    }

    .#{$namespace}-dropdown-menu {
      border: none;
    }

    #{& + '-selfdefine'} {
      outline: none;
    }
  }

  &.is-disabled {
    color: getCssVar('text-color', 'placeholder');
    cursor: not-allowed;
  }

  & .#{$namespace}-dropdown__caret-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: map.get($dropdown-caret-width, 'default');
    padding-right: 0;
    padding-left: 0;
    border-left: none;

    > span {
      display: inline-flex;
    }

    &::before {
      position: absolute;
      top: -1px;
      bottom: -1px;
      left: 0;
      display: block;
      width: 1px;
      content: '';
      background: getCssVar('overlay-color', 'lighter');
    }

    &.#{$namespace}-button::before {
      background: getCssVar('border-color');
      opacity: 0.5;
    }

    & .#{$namespace}-dropdown__icon {
      padding-left: 0;
      font-size: inherit;
    }
  }

  .#{$namespace}-dropdown-selfdefine {
    // 自定义
    outline: none;
  }
}

$dropdown-menu-padding-vertical: () !default;
$dropdown-menu-padding-vertical: map.merge(
  (
    'large': 8px,
    'default': 6px,
    'small': 4px,
  ),
  $dropdown-menu-padding-vertical
);

@include b(dropdown-menu) {
  @each $size in (large, small) {
    @include m($size) {
      padding: map.get($dropdown-menu-padding-vertical, $size)-$border-width 0;

      @include e(item) {
        padding: map.get($dropdown-item-padding, $size);
        font-size: map.get($input-font-size, $size);
        line-height: map.get($dropdown-item-line-height, $size);

        @include m(divided) {
          margin: map.get($dropdown-item-divided-margin, $size);
        }
      }
    }
  }

  position: relative;
  top: 0;
  left: 0;
  z-index: getCssVar('dropdown-menu-index');
  padding: map.get($dropdown-menu-padding-vertical, 'default')-$border-width 0;
  margin: 0;
  list-style: none;
  background-color: getCssVar('bg-color', 'overlay');
  border: none;
  border-radius: getCssVar('border-radius-base');
  box-shadow: none;

  @include e(item) {
    display: flex;
    align-items: center;
    padding: map.get($dropdown-item-padding, 'default');
    margin: 0;
    font-size: getCssVar('font-size', 'base');
    line-height: map.get($dropdown-item-line-height, 'default');
    color: getCssVar('text-color', 'regular');
    white-space: nowrap;
    list-style: none;
    cursor: pointer;
    outline: none;

    @include m(divided) {
      margin: map.get($dropdown-item-divided-margin, 'default');
      border-top: 1px solid getCssVar('border-color-lighter');
    }

    @include when(disabled) {
      color: getCssVar('text-color-disabled');
      cursor: not-allowed;
    }

    &:not(.is-disabled):focus {
      color: getCssVar('dropdown-menuItem-hover-color');
      background-color: getCssVar('dropdown-menuItem-hover-fill');
    }

    i {
      margin-right: 5px;
    }
  }
}
