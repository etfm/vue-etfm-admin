@use './shared' as *;
@use 'common/transition' as *;

@mixin menu-item {
  position: relative;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  height: getCssVar('menu-item-height');
  padding: 0 getCssVar('menu-base-level-padding');
  font-size: getCssVar('menu-item-font-size');
  line-height: getCssVar('menu-item-height');
  color: getCssVar('menu-text-color');
  white-space: nowrap;
  list-style: none;
  cursor: pointer;
  transition: border-color getCssVar('transition-duration'),
    background-color getCssVar('transition-duration'), color getCssVar('transition-duration');

  @include when(disabled) {
    cursor: not-allowed;
    background: none !important;
    opacity: 0.25;
  }

  * {
    vertical-align: bottom;
  }

  i {
    color: inherit;
  }

  &:hover,
  &:focus {
    outline: none;
  }

  &:hover {
    background-color: getCssVar('menu-hover-bg-color');
  }
}

:root {
  // They are defined on :root so they can be inherited by sub-menu instead of overwritten
  @include set-component-css-var('menu', $menu);
}

@include b(menu) {
  position: relative;
  box-sizing: border-box;
  padding-left: 0;
  margin: 0;
  list-style: none;
  background-color: getCssVar('menu-bg-color');
  border-right: solid 1px getCssVar('menu-border-color');

  @include m(vertical) {
    &:not(.#{$namespace}-menu--collapse):not(.#{$namespace}-menu--popup-container) {
      & .#{$namespace}-menu-item,
      & .#{$namespace}-sub-menu__title,
      & .#{$namespace}-menu-item-group__title {
        padding-left: calc(
          #{getCssVar('menu-base-level-padding')} + #{getCssVar('menu-level')} * #{getCssVar(
              'menu-level-padding'
            )}
        );
        white-space: nowrap;
      }
    }
  }

  @include m(horizontal) {
    display: flex;
    flex-wrap: nowrap;
    border-right: none;
    border-bottom: solid 1px getCssVar('menu-border-color');

    & > .#{$namespace}-menu-item {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      height: 100%;
      margin: 0;
      color: getCssVar('menu-text-color');
      border-bottom: 2px solid transparent;

      a,
      a:hover {
        color: inherit;
      }

      &:not(.is-disabled):hover,
      &:not(.is-disabled):focus {
        background-color: #fff;
      }
    }
    & > .#{$namespace}-sub-menu {
      &:focus,
      &:hover {
        outline: none;
      }

      &:hover {
        .#{$namespace}-sub-menu__title {
          color: getCssVar('menu-hover-text-color');
        }
      }

      &.is-active {
        .#{$namespace}-sub-menu__title {
          color: getCssVar('menu-active-color');
          border-bottom: 2px solid getCssVar('menu-active-color');
        }
      }

      & .#{$namespace}-sub-menu__title {
        height: 100%;
        color: getCssVar('menu-text-color');
        border-bottom: 2px solid transparent;

        &:hover {
          background-color: getCssVar('bg-color', 'overlay');
        }
      }
    }
    & .#{$namespace}-menu {
      & .#{$namespace}-menu-item,
      & .#{$namespace}-sub-menu__title {
        display: flex;
        align-items: center;
        height: getCssVar('menu-horizontal-sub-item-height');
        padding: 0 10px;
        line-height: getCssVar('menu-horizontal-sub-item-height');
        color: getCssVar('menu-text-color');
        background-color: getCssVar('menu-bg-color');
      }

      & .#{$namespace}-sub-menu__title {
        padding-right: 40px;
      }

      & .#{$namespace}-menu-item.is-active,
      & .#{$namespace}-sub-menu.is-active > .#{$namespace}-sub-menu__title {
        color: getCssVar('menu-active-color');
      }
    }
    & .#{$namespace}-menu-item:not(.is-disabled):hover,
    & .#{$namespace}-menu-item:not(.is-disabled):focus {
      color: getCssVar('menu-hover-text-color');
      background-color: getCssVar('menu-hover-bg-color');
      outline: none;
    }
    & > .#{$namespace}-menu-item.is-active {
      color: getCssVar('menu-active-color') !important;
      border-bottom: 2px solid getCssVar('menu-active-color');
    }
  }

  @include m(collapse) {
    width: calc(#{getCssVar('menu-icon-width')} + #{getCssVar('menu-base-level-padding')} * 2);

    > .#{$namespace}-menu-item,
    > .#{$namespace}-sub-menu > .#{$namespace}-sub-menu__title,
    > .#{$namespace}-menu-item-group
      > ul
      > .#{$namespace}-sub-menu
      > .#{$namespace}-sub-menu__title {
      [class^='#{$namespace}-icon'] {
        width: getCssVar('menu-icon-width');
        margin: 0;
        text-align: center;
        vertical-align: middle;
      }

      .#{$namespace}-sub-menu__icon-arrow {
        display: none;
      }

      > span {
        display: inline-block;
        width: 0;
        height: 0;
        overflow: hidden;
        visibility: hidden;
      }
    }

    > .#{$namespace}-menu-item.is-active i {
      color: inherit;
    }

    .#{$namespace}-menu .#{$namespace}-sub-menu {
      min-width: 200px;
    }
  }

  @include m(popup) {
    z-index: 100;
    min-width: 200px;
    padding: 5px 0;
    border: none;
    border-radius: getCssVar('border-radius-small');
    box-shadow: getCssVar('box-shadow-light');
  }

  .#{$namespace}-icon {
    flex-shrink: 0;
  }
}

@include b(menu-item) {
  @include menu-item;

  @include when(active) {
    color: getCssVar('menu-active-color');

    i {
      color: inherit;
    }
  }

  & [class^='#{$namespace}-icon'] {
    width: getCssVar('menu-icon-width');
    margin-right: 5px;
    font-size: 18px;
    text-align: center;
    vertical-align: middle;
  }
  .#{$namespace}-menu-tooltip__trigger {
    position: absolute;
    top: 0;
    left: 0;
    box-sizing: border-box;
    display: inline-flex;
    align-items: center;
    width: 100%;
    height: 100%;
    padding: 0 getCssVar('menu-base-level-padding');
  }
}

@include b(sub-menu) {
  padding-left: 0;
  margin: 0;
  list-style: none;

  @include e(title) {
    padding-right: calc(#{getCssVar('menu-base-level-padding')} + #{getCssVar('menu-icon-width')});

    @include menu-item;

    &:hover {
      background-color: getCssVar('menu-hover-bg-color');
    }
  }

  @include e(hide-arrow) {
    .#{$namespace}-sub-menu__icon-arrow {
      display: none !important;
    }
  }

  @include when(active) {
    .#{$namespace}-sub-menu__title {
      border-bottom-color: getCssVar('menu-active-color');
    }
  }

  @include when(disabled) {
    .#{$namespace}-sub-menu__title,
    .#{$namespace}-menu-item {
      cursor: not-allowed;
      background: none !important;
      opacity: 0.25;
    }
  }
  & .#{$namespace}-menu {
    border: none;
  }
  & .#{$namespace}-menu-item {
    height: getCssVar('menu-sub-item-height');
    line-height: getCssVar('menu-sub-item-height');
  }
  .#{$namespace}-icon {
    width: getCssVar('menu-icon-width');
    margin-right: 5px;
    font-size: 18px;
    text-align: center;
    vertical-align: middle;

    &.#{$namespace}-sub-menu__icon-more {
      margin-right: 0 !important;
    }
  }
  .#{$namespace}-sub-menu__icon-arrow {
    position: absolute;
    top: 50%;
    right: getCssVar('menu-base-level-padding');
    width: inherit;
    margin-top: -6px;
    margin-right: 0;
    font-size: 12px;
    transition: transform getCssVar('transition-duration');
  }
}

@include b(menu-item-group) {
  @include e(title) {
    padding: 7px 0 7px getCssVar('menu-base-level-padding');
    font-size: 12px;
    line-height: normal;
    color: getCssVar('text-color', 'secondary');
  }

  > ul {
    padding: 0;
  }
}

.horizontal-collapse-transition .#{$namespace}-sub-menu__title .#{$namespace}-sub-menu__icon-arrow {
  opacity: 0;
  transition: getCssVar('transition-duration-fast');
}
